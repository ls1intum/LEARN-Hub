"""add_user_history_and_pdf_documents

Revision ID: 05bfbbeeec18
Revises: 2a3b4c5d6e7f
Create Date: 2025-09-08 22:01:37.248459

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "05bfbbeeec18"
down_revision: str | Sequence[str] | None = "2a3b4c5d6e7f"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pdf_documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=False),
        sa.Column("extracted_fields", sa.JSON(), nullable=True),
        sa.Column("confidence_score", sa.String(length=10), nullable=True),
        sa.Column("extraction_quality", sa.String(length=20), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pdf_documents_id"), "pdf_documents", ["id"], unique=False)
    op.create_table(
        "user_favorites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("activity_ids", sa.JSON(), nullable=False),
        sa.Column("search_criteria", sa.JSON(), nullable=False),
        sa.Column("ordering_method", sa.String(length=50), nullable=False),
        sa.Column("total_duration", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_favorites_id"), "user_favorites", ["id"], unique=False)
    op.create_table(
        "user_search_history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("search_criteria", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_search_history_id"), "user_search_history", ["id"], unique=False)
    op.alter_column(
        "activities",
        "mental_load",
        existing_type=postgresql.ENUM("LOW", "MEDIUM", "HIGH", name="energylevel"),
        nullable=False,
    )
    op.alter_column(
        "activities",
        "physical_energy",
        existing_type=postgresql.ENUM("LOW", "MEDIUM", "HIGH", name="energylevel"),
        nullable=False,
    )
    op.alter_column("activities", "prep_time_minutes", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("activities", "cleanup_time_minutes", existing_type=sa.INTEGER(), nullable=False)
    op.drop_index(op.f("ix_activities_age_range"), table_name="activities")
    op.drop_index(op.f("ix_activities_bloom_level"), table_name="activities")
    op.drop_index(op.f("ix_activities_format"), table_name="activities")
    op.drop_column("activities", "pdf_path")
    op.drop_column("activities", "pdf_uploaded_at")
    op.drop_index(op.f("ix_verification_codes_code"), table_name="verification_codes")
    op.drop_index(op.f("ix_verification_codes_expires_at"), table_name="verification_codes")
    op.drop_index(op.f("ix_verification_codes_user_id"), table_name="verification_codes")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f("ix_verification_codes_user_id"), "verification_codes", ["user_id"], unique=False)
    op.create_index(op.f("ix_verification_codes_expires_at"), "verification_codes", ["expires_at"], unique=False)
    op.create_index(op.f("ix_verification_codes_code"), "verification_codes", ["code"], unique=False)
    op.add_column(
        "activities", sa.Column("pdf_uploaded_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True)
    )
    op.add_column("activities", sa.Column("pdf_path", sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.create_index(op.f("ix_activities_format"), "activities", ["format"], unique=False)
    op.create_index(op.f("ix_activities_bloom_level"), "activities", ["bloom_level"], unique=False)
    op.create_index(op.f("ix_activities_age_range"), "activities", ["age_min", "age_max"], unique=False)
    op.alter_column("activities", "cleanup_time_minutes", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("activities", "prep_time_minutes", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "activities",
        "physical_energy",
        existing_type=postgresql.ENUM("LOW", "MEDIUM", "HIGH", name="energylevel"),
        nullable=True,
    )
    op.alter_column(
        "activities",
        "mental_load",
        existing_type=postgresql.ENUM("LOW", "MEDIUM", "HIGH", name="energylevel"),
        nullable=True,
    )
    op.drop_index(op.f("ix_user_search_history_id"), table_name="user_search_history")
    op.drop_table("user_search_history")
    op.drop_index(op.f("ix_user_favorites_id"), table_name="user_favorites")
    op.drop_table("user_favorites")
    op.drop_index(op.f("ix_pdf_documents_id"), table_name="pdf_documents")
    op.drop_table("pdf_documents")
    # ### end Alembic commands ###
