name: Build and Push LEARN-Hub Multi-Arch Docker Images

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          image=moby/buildkit:buildx-stable-1

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/client
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/server
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=dev,enable={{is_default_branch!=true}}

    - name: Build and push client image
      id: build-client
      uses: docker/build-push-action@v5
      with:
        context: ./client
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/client:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDPLATFORM=${{ runner.os }}

    - name: Build and push server image
      id: build-server
      uses: docker/build-push-action@v5
      with:
        context: ./server
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/server:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDPLATFORM=${{ runner.os }}

    - name: Generate artifact attestations for client
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/client
        subject-digest: ${{ steps.build-client.outputs.digest }}
        push-to-registry: true

    - name: Generate artifact attestations for server
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/server
        subject-digest: ${{ steps.build-server.outputs.digest }}
        push-to-registry: true

    - name: Show built images
      run: |
        echo "Built images:"
        echo "Client: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/client:${{ github.sha }}"
        echo "Server: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/server:${{ github.sha }}"
        echo "Image sizes:"
        docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep -E "(client|server)"
